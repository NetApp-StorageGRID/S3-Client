image:
- Previous Ubuntu
- Visual Studio 2017

configuration:
- AWS
- WebscaleDemo
- WebscaleDemoNext
- Minio

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
  exclude:
  - configuration: Minio
    image: Visual Studio 2017

build: off

# Version number
version: 0.0.1.{build}

# Ignore testing a commit if only the README.md file changed
# Or if various strings are found in the commit message: updated readme, update readme, update docs, update version, update appveyor
skip_commits:
  files:
    - README.md
    - S3-Client-Tutorial.md
    - LICENSE

# There's no need to alter the build number for a Pull Request (PR) since they don't modify anything
pull_requests:
  do_not_increment_build_number: true

# enable SSH on Linux build
#init:
#  - sh: curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -

environment:
  my_secret:
    secure: XglRq9/YLH8mWAX9jBnwdyAbu0cVTEWbHR+a8zHd+ddhgFriOQv9C7hubgm+DCp5
  accesskey:
    secure: adgci5dfQHHEkDaS78UHMq7EZFyz5FlFBj5GCjTAM0g
  secretkey:
    secure: yfhbYXx6lQZfjayZ8RkkvjFvVZUFIhPROuBzkj6HHey2bflN0PeKJgGeIWXFF0p
  APPVEYOR_SSH_KEY: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCoyP+9UxLay7fZC94l+LCzGhDOpJx1Chyt4zAVSvTuEYBpowR0x6YFNAEvxSTdVkHP+L0gMQggWdDspuKmJGruomK9kcxV5d/BBru8jcsivCWcHGei+V5wjUciIXp3CYEcM68SgkwlDlJ465owogQfFRbJeskq5TR4pwqBfkQ0suYxKE8zBmBryDbSV5U1Z31W5JGuF3tQsIPINP08aXmHLJ+eEST1tc0MLYFGI0nohk1ZgFlW2uzmWKPVQJRieO0NUTTDwmjdp9lbMqy8iZo/V3jkgh9+hJpftFOBBREWGbfDA+atrbOpTm4RRjrW56Q0GetYyIvha3I6053oU9POOWx12qn92303Rt8QRgMKomlXphmK5F39y2V3gorHuoMLsJM1yW4kVhLGzftA1ocLfRBHElnuRf6gRUFm957njPTzxb1TtmAXsbYaIz0zbX4X/yZIG3LZkMBUHWd01BPKmwSLEa8GOxKB3uvck80KPjB7qHAzGmCwv0NHAk+KsGAAp7+6ZLr7nVdBIYtJIBDMWl3cZk/tCsaqn1IuW2kZqu5nM/19o13dGSo6A2BoCuuQ7iCPktlgvaJBQA1Sc90gmdbM+CxFtSufXaGX3AEEGAp+vMePnSL9t2G+Dy1sg5xEBqET7TL3VqB075ksTyeXJCZPRgQSdiGYyTR9wv/cQ== florian.feldhaus@gmail.com
  APPVEYOR_SSH_BLOCK: true

# Install Pester for testing, setup AWS Profiles and deploy minio via docker
install:
  - ps: $PSVersionTable
  - ps: Install-Module Pester -Scope CurrentUser -Force -SkipPublisherCheck
  - ps: iex ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))
  - cmd: mkdir %USERPROFILE%\.aws
  - cmd: appveyor-tools\secure-file -decrypt etc\config.enc -out %USERPROFILE%\.aws\config -secret %my_secret%
  - cmd: appveyor-tools\secure-file -decrypt etc\credentials.enc -out %USERPROFILE%\.aws\credentials -secret %my_secret%
  - sh: mkdir $HOME/.aws
  - sh: ./appveyor-tools/secure-file -decrypt etc/config.enc -out $HOME/.aws/config -secret $my_secret
  - sh: ./appveyor-tools/secure-file -decrypt etc/credentials.enc -out $HOME/.aws/credentials -secret $my_secret
  - sh: if [[ "$CONFIGURATION" == "Minio" ]]; then docker pull minio/minio;fi
  - sh: if [[ "$CONFIGURATION" == "Minio" ]]; then docker run -d -p 9000:9000 -e "MINIO_ACCESS_KEY=$accesskey" -e "MINIO_SECRET_KEY=$secretkey" -e "MINIO_BROWSER=off" minio/minio server /data;fi

# Invoke Pester to run all of the unit tests, then save the results into XML in order to populate the AppVeyor tests section
# If any of the tests fail, consider the pipeline failed
test_script:
  - ps: $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile TestsResults.xml -PassThru -Script @{Path="./src/S3-Client.Tests.ps1";Parameters=@{ProfileName=$($env:CONFIGURATION)}}
  - ps: (New-Object System.Net.WebClient).UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path .\TestsResults.xml))
  - ps: if ($res.FailedCount -gt 0) { throw "$($res.FailedCount) tests failed."}